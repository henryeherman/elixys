<?xml version="1.0" encoding="utf-8"?>
<Views:ViewBase xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:Views="Elixys.Views.*" creationComplete="OnCreationComplete()" width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import Elixys.HTTPRequest;
			import Elixys.HTTPRequestEvent;
			import Elixys.Objects.Button;
			import Elixys.Objects.PostSelect;
			import Elixys.Objects.SequenceMetadata;
			import Elixys.Objects.State;
			
			import mx.collections.ArrayList;
			import mx.containers.VBox;
			import mx.events.IndexChangedEvent;
			
			import spark.components.Button;
			
			// Called when the object is created
			private function OnCreationComplete():void
			{
				// Add event listenters
				_tabNavigator.addEventListener(IndexChangedEvent.CHANGE, OnTabChange);
			}
			
			// Update function
			public override function Update(pState:State):void
			{
				// Update our tab array with the server data
				UpdateTabs(_tabNavigator, pState.ClientDetailsSelect().Tabs(), CreateNewTab, pState.ClientDetailsSelect().TabID());
				function CreateNewTab():SelectViewTab
				{
					// Callback to create our new tab
					return new SelectViewTab();
				}
				var pSelectedTab:SelectViewTab = _tabNavigator.selectedChild as SelectViewTab;

				// Update our navigation button array with the server data
				UpdateButtons(_navigationbuttons, pState.ClientDetailsSelect().NavigationButtons(), CreateNewButton);
				function CreateNewButton():spark.components.Button
				{
					// Callback to create our new button
					var pButton:spark.components.Button = new spark.components.Button();
					pButton.width = 150;
					pButton.height = 40;
					pButton.styleName = "button";
					pButton.addEventListener(MouseEvent.CLICK, OnButtonClick);
					return pButton;
				}

				// Update our options button array with the server data
				UpdateButtons(pSelectedTab._buttons, pState.ClientDetailsSelect().OptionButtons(), CreateNewButton);
				
				// Update our sequence list with the server data
				UpdateList(pSelectedTab._sequenceList, pState.ClientDetailsSelect().Sequences(), CreateNewSequence);
				function CreateNewSequence():SequenceMetadata
				{
					// Callback to create our new sequence
					return new SequenceMetadata();
				}
			}
			
			// Tab change handler
			private function OnTabChange(event:IndexChangedEvent):void
			{
				// Create a POST request
				var pPostSelect:PostSelect = new PostSelect();
				pPostSelect.Type("TABCLICK");
				pPostSelect.TargetID((_tabNavigator.selectedChild as SelectViewTab).id);
				pPostSelect.SequenceID("4");
				
				// Convert the request to a byte array
				var pBody:ByteArray = new ByteArray();
				pBody.writeMultiByte(pPostSelect.toString(), "utf8");
				pBody.position = 0;
				
				// Pass the request up to be sent to the server
				var pHTTPRequest:HTTPRequest = new HTTPRequest();
				pHTTPRequest.m_sMethod = "POST";
				pHTTPRequest.m_sResource = "/Elixys/SELECT";
				pHTTPRequest.m_pBody = pBody;
				dispatchEvent(new HTTPRequestEvent(pHTTPRequest));
			}

			// Button click handler
			private function OnButtonClick(event:MouseEvent):void
			{
				// Create a POST request
				var pPostSelect:PostSelect = new PostSelect();
				pPostSelect.Type("BUTTONCLICK");
				pPostSelect.TargetID((event.target as spark.components.Button).id);
				pPostSelect.SequenceID("4");
				
				// Convert the request to a byte array
				var pBody:ByteArray = new ByteArray();
				pBody.writeMultiByte(pPostSelect.toString(), "utf8");
				pBody.position = 0;
				
				// Pass the request up to be sent to the server
				var pHTTPRequest:HTTPRequest = new HTTPRequest();
				pHTTPRequest.m_sMethod = "POST";
				pHTTPRequest.m_sResource = "/Elixys/SELECT";
				pHTTPRequest.m_pBody = pBody;
				dispatchEvent(new HTTPRequestEvent(pHTTPRequest));
			}
		]]>
	</fx:Script>
	
	<s:VGroup x="0" y="0" width="100%" height="100%">
		<mx:TabNavigator id="_tabNavigator" tabHeight="80" tabWidth="250" styleName="label" width="100%" height="100%" />
	</s:VGroup>
	<s:VGroup x="0" y="0" horizontalAlign="right" verticalAlign="top" width="100%" height="100%">
		<s:HGroup id="_navigationbuttons" paddingRight="20" paddingTop="20" gap="20" />
	</s:VGroup>
</Views:ViewBase>
