<?xml version="1.0" encoding="utf-8"?>
<Views:SubviewBase xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:Views="Elixys.Views.*" width="100%" height="100%" xmlns:Renderers="Elixys.Views.Renderers.*">
	<fx:Script>
		<![CDATA[
			import Elixys.Events.HTTPRequestEvent;
			import Elixys.HTTP.HTTPRequest;
			import Elixys.Objects.Component;
			import Elixys.Objects.ComponentSummary;
			import Elixys.Objects.ReactorState;
			import Elixys.Objects.Reagent;
			import Elixys.Objects.State;
			
			import mx.controls.TextArea;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;

			/***
			 * Member functions
			 **/
			
			// Called when the state arrives from the server
			public override function UpdateState(pState:State):void
			{
				// Handle according to our view mode
				if (m_sViewMode == SubviewBase.RUNMODE)
				{
					// Update the unit operation buttons
					UpdateButtons(_unitOperationButtons, pState.ServerState().RunState().UnitOperationButtons(), CreateButtonCallback);
				}
			}
			
			// Called when component details arrive from the server
			public override function UpdateComponent(pComponent:Component):void
			{
				// Remember the component
				m_pComponentSummary = new ComponentSummary(null, pComponent);
				
				// Handle according to our view mode
				if (m_sViewMode == SubviewBase.VIEWMODE)
				{
					// Set the name and format the output text
					_viewComponentName.text = m_pComponentSummary.Name;
					if (m_pComponentSummary.SuccessFlag == 1)
					{
						_outputText.text = "Run complete successfully";
					}
					else
					{
						_outputText.text = "Run failed: " + m_pComponentSummary.Message;						
					}
				}
				else if (m_sViewMode == SubviewBase.RUNMODE)
				{
					// Set the name and format the output text
					_runComponentName.text = m_pComponentSummary.Name;
					if (m_pComponentSummary.SuccessFlag == 1)
					{
						_runOutputText.text = "Run complete successfully";
					}
					else
					{
						_runOutputText.text = "Run failed: " + m_pComponentSummary.Message;						
					}
				}
			}
			
			/***
			 * Message handlers
			 **/
			
			// Called when creation is complete
			protected override function OnCreationComplete(event:FlexEvent):void
			{
				// Call the base implementation
				super.OnCreationComplete(event);

				// Set the base class variables
				m_pViewGroup = _viewGroup;
				m_pEditGroup = _editGroup;
				m_pRunGroup = _runGroup;
				
				// Set our view mode
				SetViewMode(m_sViewMode)
			}
			
			/***
			 * Member variables
			 **/
			
			// Component
			private var m_pComponentSummary:ComponentSummary;
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%">
		<s:VGroup id="_viewGroup" visible="false" includeInLayout="false" width="100%" height="100%">
			<s:HGroup width="100%" horizontalAlign="center">
				<s:Label id="_viewComponentName" styleName="TextLarge" />
			</s:HGroup>
			<s:Spacer height="10" />
			<s:VGroup horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" verticalCenter="0" width="100%" height="100%">
				<mx:Text id="_outputText" styleName="TextMedium" width="80%" />		
			</s:VGroup>
		</s:VGroup>
		<s:VGroup id="_editGroup" visible="false" includeInLayout="false" width="100%" height="100%" />
		<s:VGroup id="_runGroup" visible="false" includeInLayout="false" width="100%" height="100%">
			<s:HGroup width="100%" horizontalAlign="center">
				<s:Label id="_runComponentName" styleName="TextLarge" />
			</s:HGroup>
			<s:Spacer height="10" />
			<s:VGroup horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" verticalCenter="0" gap="15" width="100%" height="100%">
				<s:Spacer height="100%" />
				<s:HGroup verticalAlign="middle" width="80%">
					<mx:Text id="_runOutputText" styleName="TextMedium" width="100%" />
				</s:HGroup>
				<s:HGroup id="_unitOperationButtons" horizontalAlign="center" verticalAlign="middle" width="80%" />
				<s:Spacer height="100%" />
			</s:VGroup>
		</s:VGroup>
	</s:VGroup>
</Views:SubviewBase>
