# Elixys hardware map

# The unit numbers of the PLC modules used to calculate their location in memory (hex values)
AnalogOutUnit = 0
AnalogInUnit = 1
Thermocontroller1Unit = 2
Thermocontroller2Unit = 5
Thermocontroller3Unit = 7
DeviceNetUnit = 3

# The memory offsets of the PLC modules that do not have a unit number (hex values)
DigitalOutOffset = 0
DigitalInOffset = 4

# All values are in the format:
#   HardwareName = type.access.location
# Type is be one of the following:
#   binary
#   analog
#   thermocontroller
# Access is one of the following:
#   out - Read and write
#   in - Read-only
# Location is interpreted according to the value type:
#   binary - Location is the bit number
#   analog - TBD
#   thermocontroller - Location is the thermocontroller and loop numbers (period delimited)

# Door sensors
Door1Open = binary.in.0
Door2Open = binary.in.1

# Vacuum system
VacuumSystemOn = binary.out.0

# Cooling system
CoolingSystemOn = binary.out.1

# Pressure regulators
[PressureRegulator1]
    On = binary.out.2
    SetPressure = analog.out.0
    ActualPressure = analog.in.0

[PressureRegulator2]
    On = binary.out.3
    SetPressure = analog.out.1
    ActualPressure = analog.in.1

# Reagent robot
[ReagentRobot]
    SetX = integer.out.0
    ActualX = integer.in.0
    SetZ = integer.out.1
    ActualZ = integer.in.1
    SetGripperUp = binary.out.4
    GripperUp = binary.in.2
    GripperDown = binary.in.3
    SetGripperOpen = binary.out.5
    GripperOpen = binary.in.4
    GripperClose = binary.in.5

# First reactor
[Reactor1]

    # Movement
    SetZ = integer.out.2
    ActualZ = integer.in.2
    SetReactorUp = binary.out.6
    ReactorUp = binary.in.6
    ReactorDown = binary.in.7

    # Valves (True = open)
    EvaporationValve = binary.out.7
    VacuumValve = binary.out.8
    TransferValve = binary.out.9
    Reagent1TransferValve = binary.out.10
    Reagent2TransferValve = binary.out.11
    Stopcock1Valve = binary.out.12
    Stopcock2Valve = binary.out.13
    Stopcock3Valve = binary.out.14

    # Stir motor
    StirMotor = integer.out.3

    # Radiation detector
    RadiationDetector = analog.in.2

    # Temperature controllers
    [[TemperatureController1]]
        SetTemperature = thermocontroller.out.1.1
        ActualTemperature = thermocontroller.in.1.1

    [[TemperatureController2]]
        SetTemperature = thermocontroller.out.1.2
        ActualTemperature = thermocontroller.in.1.2

    [[TemperatureController3]]
        SetTemperature = thermocontroller.out.1.3
        ActualTemperature = thermocontroller.in.1.3
